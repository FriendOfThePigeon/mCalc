#!/usr/bin/perl
use strict;

use Getopt::Long;
use Gtk2 -init;

use MCalcMsgBox;
use MCalcModel;
use MCalcView;

my $VERBOSITY = 4;
my @msgs = ();
my %MSG = (
	'ALWAYS' => 0,
	'ERROR' => 1,
	'WARNING' => 2,
	'INFO' => 3,
	'DEBUG' => 4,
);
sub msg {
	my ($level, $msg) = @_;
	my $msg_level = $MSG{$level};
	if (!$msg_level) {
		$msg_level = 0;
	}
	return if ($msg_level > $VERBOSITY);
	push @msgs, [$msg_level, $msg];
}

sub my_abort {
	MCalcMsgBox->show_msgs(
		\@msgs,
		sub {
			my ($level) = @_;
			Gtk2->main_quit();
			exit (5 - $level);
		},
		"my_abort"
	);
}

sub get_options {
	my $cfg = {
		DBFILE => $ENV{HOME} . "/.mtimes",
	};
	GetOptions (
		'db:s' => sub { $cfg->{DBFILE} = $_[0] }, 
	);
	return $cfg;
}

sub help {
	my @params = @_;
	printf "Invalid option(s): [%s]\n", join(', ', @params);
	exit 1;
}

# Program starts here

my $cfg = get_options();
Gtk2->init;
my $model = MCalcModel->new($cfg);
my $view = MCalcView->new()
	->set_show_msg(\&MCalcMsgBox::msg)
	->set_abort(\&my_abort)
	->set_model($model);
$view->show();
Gtk2->main;

